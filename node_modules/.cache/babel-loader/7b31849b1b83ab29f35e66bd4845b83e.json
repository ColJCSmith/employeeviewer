{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ColSmith/USYD-Coding-Bootcamp/Class Activities/employeeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ColSmith/USYD-Coding-Bootcamp/Class Activities/employeeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ColSmith/USYD-Coding-Bootcamp/Class Activities/employeeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ColSmith/USYD-Coding-Bootcamp/Class Activities/employeeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import EmployeeData from\"./EmployeeDetail\";import API from\"../utils/API\";var OmdbContainer=/*#__PURE__*/function(_React$Component){_inherits(OmdbContainer,_React$Component);var _super=_createSuper(OmdbContainer);function OmdbContainer(){var _this;_classCallCheck(this,OmdbContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={employeeRecords:[]};_this.componentDidMount=function(){API.search().then(function(response){var employeedata=response.data.results;var employeeRecordstemp=[];console.log(employeedata);for(var i=0;i<employeedata.length;i++){var efile={name:employeedata[i].name.first+\" \"+employeedata[i].name.last,email:employeedata[i].email,image:employeedata[i].picture.medium,city:employeedata[i].location.city,dob:employeedata[i].dob.date};employeeRecordstemp.push(efile);}console.log(employeeRecordstemp);_this.setState({employeeRecords:employeeRecordstemp});});};return _this;}_createClass(OmdbContainer,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Employee Details\"}),/*#__PURE__*/_jsx(EmployeeData,{employees:this.state.employeeRecords})]});}}]);return OmdbContainer;}(React.Component);export default OmdbContainer;","map":{"version":3,"sources":["/Users/ColSmith/USYD-Coding-Bootcamp/Class Activities/employeeviewer/src/components/OmdbContainer.js"],"names":["React","EmployeeData","API","OmdbContainer","state","employeeRecords","componentDidMount","search","then","response","employeedata","data","results","employeeRecordstemp","console","log","i","length","efile","name","first","last","email","image","picture","medium","city","location","dob","date","push","setState","Component"],"mappings":"ozBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,C,GAGMC,CAAAA,a,mWACJC,K,CAAQ,CACNC,eAAe,CAAE,EADX,C,OAGRC,iB,CAAoB,UAAM,CACxBJ,GAAG,CAACK,MAAJ,GACGC,IADH,CACQ,SAACC,QAAD,CAAc,CAClB,GAAIC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAjC,CACA,GAAIC,CAAAA,mBAAmB,CAAG,EAA1B,CACAC,OAAO,CAACC,GAAR,CAAYL,YAAZ,EACA,IAAK,GAAIM,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,YAAY,CAACO,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC5C,GAAIE,CAAAA,KAAK,CAAG,CACVC,IAAI,CAAET,YAAY,CAACM,CAAD,CAAZ,CAAgBG,IAAhB,CAAqBC,KAArB,CAA6B,GAA7B,CAAmCV,YAAY,CAACM,CAAD,CAAZ,CAAgBG,IAAhB,CAAqBE,IADpD,CAEVC,KAAK,CAAEZ,YAAY,CAACM,CAAD,CAAZ,CAAgBM,KAFb,CAGVC,KAAK,CAAEb,YAAY,CAACM,CAAD,CAAZ,CAAgBQ,OAAhB,CAAwBC,MAHrB,CAIVC,IAAI,CAAEhB,YAAY,CAACM,CAAD,CAAZ,CAAgBW,QAAhB,CAAyBD,IAJrB,CAKVE,GAAG,CAAElB,YAAY,CAACM,CAAD,CAAZ,CAAgBY,GAAhB,CAAoBC,IALf,CAAZ,CAOAhB,mBAAmB,CAACiB,IAApB,CAAyBZ,KAAzB,EACD,CACDJ,OAAO,CAACC,GAAR,CAAYF,mBAAZ,EACA,MAAKkB,QAAL,CAAc,CAAE1B,eAAe,CAAEQ,mBAAnB,CAAd,EACD,CAjBH,EAkBD,C,gFAEQ,CACP,mBACE,oCACE,wCADF,cAEE,KAAC,YAAD,EAAc,SAAS,CAAE,KAAKT,KAAL,CAAWC,eAApC,EAFF,GADF,CAMD,C,2BAhCyBL,KAAK,CAACgC,S,EAmClC,cAAe7B,CAAAA,aAAf","sourcesContent":["import React from \"react\";\nimport EmployeeData from \"./EmployeeDetail\";\nimport API from \"../utils/API\";\n\n\nclass OmdbContainer extends React.Component {\n  state = {\n    employeeRecords: [],\n  };\n  componentDidMount = () => {\n    API.search()\n      .then((response) => {\n        let employeedata = response.data.results;\n        let employeeRecordstemp = [];\n        console.log(employeedata)\n        for (let i = 0; i < employeedata.length; i++) {\n          let efile = {\n            name: employeedata[i].name.first + \" \" + employeedata[i].name.last,\n            email: employeedata[i].email,\n            image: employeedata[i].picture.medium,\n            city: employeedata[i].location.city,\n            dob: employeedata[i].dob.date,\n          };\n          employeeRecordstemp.push(efile);\n        }\n        console.log(employeeRecordstemp);\n        this.setState({ employeeRecords: employeeRecordstemp });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Employee Details</h2>\n        <EmployeeData employees={this.state.employeeRecords} />\n      </div>\n    );\n  }\n}\n\nexport default OmdbContainer;\n"]},"metadata":{},"sourceType":"module"}